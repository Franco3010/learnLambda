AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs20.x

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers:
          MyLambdaTokenAuthorizer:
            FunctionArn: !GetAtt AuthorizerFunction.Arn
            Identity:
              Header: Authorization
              ValidationExpression: '^[-0-9a-zA-Z\._]*$'

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/authorize/
      Handler: index.handler

  ProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/product/
      Handler: index.handler
      Events:
        ApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /product
            Method: ANY
        ApiWithId:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /product/{id}
            Method: ANY

  BasketFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/basket/
      Handler: index.handler
      Events:
        ApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /basket
            Method: ANY
        ApiCheckout:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /basket/checkout
            Method: POST

  OrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/ordering/
      Handler: index.handler
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /order
            Method: ANY

  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/auth/
      Handler: index.handler
      Events:
        ApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /auth
            Method: ANY
            Auth:
              Authorizer: NONE
        ApiRegister:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /auth/register
            Method: POST
            Auth:
              Authorizer: NONE
        ApiLogin:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /auth/login
            Method: POST
            Auth:
              Authorizer: NONE

  ProductTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: product
      PrimaryKey:
        Name: id
        Type: String

  BasketTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: basket
      PrimaryKey:
        Name: userName
        Type: String

  OrderTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: order
      PrimaryKey:
        Name: userName
        Type: String

  UserTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: user
      PrimaryKey:
        Name: id
        Type: String

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
